akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers.event = "com.dhpcs.liquidity.persistence.PlayJsonEventSerializer"
    serialization-bindings {
      "java.io.Serializable" = none
      "com.dhpcs.liquidity.persistence.Event" = event
    }
  }
  remote.netty.tcp {
    hostname = "localhost"
    port = 2552
  }
  cluster {
    metrics.enabled = off
    seed-nodes = ["akka.tcp://liquidity@localhost:2552"]
    sharding.state-store-mode = ddata
  }
  extensions += "akka.cluster.ddata.DistributedData"
  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }
  http.server {
    remote-address-header = on
    parsing.tls-session-info-header = on
  }
}
cassandra-journal.contact-points = ${liquidity.cassandra.contact-points}
cassandra-snapshot-store.contact-points = ${liquidity.cassandra.contact-points}
liquidity {
  cassandra.contact-points = ["cassandra"]
  http {
    keep-alive-interval = "30 seconds"
    interface = "0.0.0.0"
    port = 443
  }
}
