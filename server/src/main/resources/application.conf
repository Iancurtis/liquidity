akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers {
      zone-record = "com.dhpcs.liquidity.server.serialization.ZoneRecordSerializer"
      zone-validator-message = "com.dhpcs.liquidity.server.serialization.ZoneValidatorMessageSerializer"
      zone-monitor-message = "com.dhpcs.liquidity.server.serialization.ZoneMonitorMessageSerializer"
      client-connection-message = "com.dhpcs.liquidity.server.serialization.ClientConnectionMessageSerializer"
      client-monitor-message = "com.dhpcs.liquidity.server.serialization.ClientMonitorMessageSerializer"
    }
    serialization-bindings {
      "com.dhpcs.liquidity.persistence.zone.ZoneRecord" = zone-record
      "com.dhpcs.liquidity.actor.protocol.zonevalidator.SerializableZoneValidatorMessage" = zone-validator-message
      "com.dhpcs.liquidity.actor.protocol.zonemonitor.SerializableZoneMonitorMessage" = zone-monitor-message
      "com.dhpcs.liquidity.actor.protocol.clientconnection.SerializableClientConnectionMessage" = client-connection-message
      "com.dhpcs.liquidity.actor.protocol.clientmonitor.SerializableClientMonitorMessage" = client-monitor-message
    }
    allow-java-serialization = off
  }
  remote.netty.tcp {
    hostname = ${?AKKA_HOSTNAME}
    bind-hostname = "0.0.0.0"
  }
  cluster.metrics.enabled = off
  extensions += "akka.persistence.Persistence"
  persistence {
    journal {
      auto-start-journals = ["jdbc-journal"]
      plugin = "jdbc-journal"
    }
    snapshot-store {
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
      plugin = "jdbc-snapshot-store"
    }
  }
  http.server.remote-address-header = on
}
jdbc-journal {
  slick = ${slick}
  event-adapters {
    zone-event = "com.dhpcs.liquidity.server.ZoneEventAdapter"
  }
  event-adapter-bindings {
    "com.dhpcs.liquidity.persistence.zone.ZoneEventEnvelope" = zone-event
  }
}
jdbc-snapshot-store.slick = ${slick}
jdbc-read-journal.slick = ${slick}
slick {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    driver = "com.mysql.jdbc.Driver"
    url = "jdbc:mysql://mysql/liquidity_journal?cachePrepStmts=true&cacheCallableStmts=true&cacheServerConfiguration=true&useLocalSessionState=true&elideSetAutoCommits=true&alwaysSendSetIsolation=false&enableQueryTimeouts=false&connectionAttributes=none&verifyServerCertificate=false&useSSL=false&useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=UTC&rewriteBatchedStatements=true"
    user = "root"
    password = ""
    connectionTestQuery = "SELECT 1"
  }
}
