syntax = "proto3";

package dhpcs.liquidity.ws.protocol;

option java_package = "com.dhpcs.liquidity.proto.ws.protocol";

import "dhpcs/liquidity/actor/protocol/zone-validator.proto";

message ClientMessage {
    message KeyOwnershipChallenge {
        bytes nonce = 1;
    }
    message Command {
        int64 correlation_id = 1;
        oneof command {
            bytes ping_command = 2;
        }
    }
    message Response {
        int64 correlation_id = 1;
        oneof response {
            dhpcs.liquidity.actor.protocol.zonevalidator.ZoneResponse zone_response = 2;
        }
    }
    message Notification {
        message ZoneNotificationEnvelope {
            string zone_id = 1;
            dhpcs.liquidity.actor.protocol.zonevalidator.ZoneNotification zone_notification = 2;
        }
        oneof notification {
            ZoneNotificationEnvelope zone_notification_envelope = 1;
        }
    }
    oneof message {
        KeyOwnershipChallenge key_ownership_challenge = 1;
        Command command = 2;
        Response response = 3;
        Notification notification = 4;
    }
}

message ServerMessage {
    message KeyOwnershipProof {
        bytes public_key = 1;
        bytes signature = 2;
    }
    message Command {
        message ZoneCommandEnvelope {
            string zone_id = 1;
            dhpcs.liquidity.actor.protocol.zonevalidator.ZoneCommand zone_command = 2;
        }
        int64 correlation_id = 1;
        oneof command {
            dhpcs.liquidity.actor.protocol.zonevalidator.ZoneCommand.CreateZoneCommand create_zone_command = 2;
            ZoneCommandEnvelope zone_command_envelope = 3;
        }
    }
    message Response {
        int64 correlation_id = 1;
        oneof response {
            bytes ping_response = 2;
        }
    }
    oneof message {
        KeyOwnershipProof key_ownership_proof = 1;
        Command command = 2;
        Response response = 3;
    }
}
